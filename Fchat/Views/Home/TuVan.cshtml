
@{
    ViewBag.Title = "TuVan";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-4 menu">
        <div class="logo">
            <img src="../images/Logo.png" alt="Logo" style="width: 150px;height: 100px;margin-left: 20px;">
        </div>
        <div class="content">
            <img src="image/download.png" alt="">
            <p style="display: inline;position: relative;top: 3px;color:white;">@Session["UserName"]</p>
            
        </div>
        <div class="mucluc">
            <p style="font-size: 25px;color: white;padding:5px 0 0 40px;">Mục Lục</p>
        </div>
        <div class="menu-chinh">
            <ul>
                <li><img src="../images/hotline.png" alt=""><a href="">Chat Realtime</a></li>
                <li><img src="../images/facetime.png" alt=""><a href="">Video Call</a></li>
            </ul>
        </div>
    </div>
    <div class="col-md-8">
        <h1 style="margin:50px 0 20px 450px;">Khung Chat</h1>
        <div class="row">
            <div class="col-md-4">
                <p style="margin:50px 0 10px 50px;font-size: 20px;">Danh Sách Khách Hàng</p>
                <table class="table" id="users">
                    <thead>
                        <tr>
                            <th scope="col">STT</th>
                            <th scope="col">Name</th>
                            <th scope="col">Where</th>
                            <th scope="col">Information</th>
                        </tr>
                    </thead>
                    <tbody>
                       
                    </tbody>
                </table>
            </div>
            <div class="col-md-8 chat">
                <div class="chat-area">
                    <div class="chat-content" id="chat-content">
                       
                    </div>
                    <div class="textbox-chat">
                        <input type="text" class="txtInputMessage" id="txtInputMessage" placeholder="Message..." >
                        <button class="btnSend" id="btnSend">Gửi</button>
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>


@section scripts {
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <script>
        $(function () {
            var chat = $.connection.chat;

            var desConnectionID = '';
            var desName = '';

            chat.client.addNewMessageToPage = function (classofMessage, msg) {

                $('#chat-content').append('<div class="'
                    + classofMessage + '"><div class="message"><p>'
                    + htmlEncode(msg) + '</p ></div></div>');

            }; 
            
            @*chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                var user = '@Session["UserName"]';
                if (htmlEncode(name) === user) {
                    $('#chat-content').append('<div class="send"><div class="message"><p>' + htmlEncode(message) +
                        '</p ></div></div>');
                } else {
                    $('#chat-content').append('<div class="recive"><div class="message"><p>' + htmlEncode(message) +
                        '</p ></div></div>');
                }

                $('#chat-content').scrollTop(this.height);

            };*@


            chat.client.ReciveAMessage = function (msg) {
                alert(msg);
                desConnectionID = '';
                $(".btn-connect").removeAttr("style");
            }

             

            chat.client.AcceptReq = function (data) {
                desConnectionID = data.connectionID;
                desName = data.name;
                $('#chat-content span').remove();
                $('#chat-content').append("<span class='text-center'> connect to " + desName + " </span>")
            }

            chat.client.updateUserList = function (userList) {
                console.log(userList);
                $("#users tbody tr").remove();
                var i = 1;
                userList.forEach(function (item) {
                    $("#users tbody").append(' <tr class="users"><th scope= "col" >'
                        + i + '</th ><td scope="col">' + item.name + '</td><td scope= "col">'
                        + item.connectionID + '</td ><td scope="col" id=""><button class="btn-connect" id="' + item.connectionID + '" onClick="handleConnectbtn(this.id)">connect</button></td></tr >');
                });
            }


            $.connection.hub.start().done(function () {
                var UserName = '@Session["UserName"]';
                var userID = @Session["UserID"];
               
                
                $('#txtInputMessage').keypress(function (event) {
                    if (event.charCode == 13) {
                        if ($('#txtInputMessage').val() == "") {
                            event.preventDefault();
                        } else {
                            // Call the Send method on the hub.
                            chat.server.sentfkingmessage(desConnectionID, $('#txtInputMessage').val());
                            // Clear text box and reset focus for next comment.
                            $('#txtInputMessage').val('').focus();

                        }
                    }
                });

               


                handleConnectbtn = function (clickedID) {
                    desConnectionID = clickedID;

                    console.log(desConnectionID);

                    chat.server.connectToPersion(desConnectionID);

                    $('#chat-content').append("<span class='text-center'> connect to " + desConnectionID + " </span>")

                    $("#" + clickedID).attr("style", "background: blue");
                }

                //$('.btn-connect').click(function () {
                    
                //});

                $('#btnSend').click(function () {

                    if ($('#txtInputMessage').val() == "") {
                        event.preventDefault();
                    } else {
                        // Call the Send method on the hub.
                        chat.server.sentfkingmessage(desConnectionID, $('#txtInputMessage').val());
                        // Clear text box and reset focus for next comment.
                        $('#txtInputMessage').val('').focus();

                    }
                });

                

                
            });

            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }
            
        })
    </script>
}
